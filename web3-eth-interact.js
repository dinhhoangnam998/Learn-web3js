import Web3 from 'web3'
// ganache
// const web3 = new Web3('HTTP://127.0.0.1:8545')
// const acc1pub = '0xE338D6bC9305CC9D430D3B970F0b939F7138786A'
// const acc1pri = '9652ed411d15b32ef4b71111027be8b3e42e404a12ef432ebdab3872927be3c9'
// const myContractAddress = '0x3AdE5f5BB3f0C51D87521cEE56961db6685da4D3'

// infura
const web3 = new Web3('https://ropsten.infura.io/v3/fb1c2f2f566443d08c59aae698c78839')
const acc1pub = '0xf08a810eFBAFCCd36F065BE304D50378873Cc5B4'
const acc1pri = '6A6CFFD6BED34FB3BB6EEBD27F6786690912EAF9FC75B1CD28533BAB951D059C'
const acc2pub = '0x863C32906d68B7022070cD5F14583fb927A46c0B'
const myContractAddress = '0xc598024e60acc4f1714e7927D14061B6B84B06F5'

web3.eth.accounts.wallet.add(acc1pri)
web3.eth.defaultAccount = acc1pub

const personABI = [{ "inputs": [{ "internalType": "uint256", "name": "_age", "type": "uint256" }, { "internalType": "string", "name": "_name", "type": "string" }], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "time", "type": "uint256" }], "name": "FallbackHappen", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "from", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "ReceiveEther", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "from", "type": "address" }, { "indexed": false, "internalType": "string", "name": "_name", "type": "string" }], "name": "SetName", "type": "event" }, { "stateMutability": "payable", "type": "fallback" }, { "inputs": [], "name": "age", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "gender", "outputs": [{ "internalType": "enum Person.Gender", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getInfo", "outputs": [{ "internalType": "string", "name": "_name", "type": "string" }, { "internalType": "uint256", "name": "_age", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_age", "type": "uint256" }], "name": "setAge", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_name", "type": "string" }], "name": "setName", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "stateMutability": "payable", "type": "receive" }]
const personBytecode = `608060405234801561001057600080fd5b506040516108d63803806108d68339818101604052604081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b5060405250505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000908051906020019061014f92919061015e565b50816001819055505050610203565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019f57805160ff19168380011785556101cd565b828001600101855582156101cd579182015b828111156101cc5782518255916020019190600101906101b1565b5b5090506101da91906101de565b5090565b61020091905b808211156101fc5760008160009055506001016101e4565b5090565b90565b6106c4806102126000396000f3fe6080604052600436106100595760003560e01c806306fdde0314610104578063262a9dff146101945780635a9b0b89146101bf57806379caad8614610256578063c47f00271461028f578063d5dcf12714610357576100cb565b366100cb577ff32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a7043963334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1005b7fdb2a4abeadc66af14cd0b51b7d065ee545dead0ba0fc18eaed737955895722f2426040518082815260200191505060405180910390a1005b34801561011057600080fd5b50610119610392565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015957808201518184015260208101905061013e565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a057600080fd5b506101a9610430565b6040518082815260200191505060405180910390f35b3480156101cb57600080fd5b506101d4610436565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561021a5780820151818401526020810190506101ff565b50505050905090810190601f1680156102475780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561026257600080fd5b5061026b6104e2565b6040518082600181111561027b57fe5b60ff16815260200191505060405180910390f35b34801561029b57600080fd5b50610355600480360360208110156102b257600080fd5b81019080803590602001906401000000008111156102cf57600080fd5b8201836020820111156102e157600080fd5b8035906020019184600183028401116401000000008311171561030357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104f5565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b81019080803590602001909291905050506105df565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b505050505081565b60015481565b6060600080600154818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b50505050509150915091509091565b600260009054906101000a900460ff1681565b806000908051906020019061050b9291906105e9565b507f5b55a57845097b0b4cf682f6d089fe6bad81dc28242927eca133f4b1c4d28b443382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105a1578082015181840152602081019050610586565b50505050905090810190601f1680156105ce5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b8060018190555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061062a57805160ff1916838001178555610658565b82800160010185558215610658579182015b8281111561065757825182559160200191906001019061063c565b5b5090506106659190610669565b5090565b61068b91905b8082111561068757600081600090555060010161066f565b5090565b9056fea2646970667358221220be6919c34039c0b9c5ba096b5e7456001a00159693a4f152df550e7b8b1c2fa664736f6c63430006040033`;
const myPersonContract = new web3.eth.Contract(personABI, myContractAddress, { from: acc1pub });
myPersonContract.events.ReceiveEther().on('data', console.log)
myPersonContract.events.SetName({}, (err, event) => console.log(event))

// web3.eth.sendTransaction({ to: myContractAddress, value: 10 ** 18 }).then((receipt) => { })
// myPersonContract.methods.name().call().then(console.log)
// myPersonContract.methods.age().call().then(console.log)
// myPersonContract.methods.getInfo().call().then(console.log)

// myPersonContract.methods.setName('Dinh Hoang Nam').send().then(receipt => { })
const txData = myPersonContract.methods.setName('Dinh Hoang Nam').encodeABI();
const tx = {
  to: myContractAddress,
  data: txData,
  gas: '1000000',
  nonce: web3.eth.getTransactionCount(acc1pub)
};
web3.eth.accounts.signTransaction(tx, acc1pri).then(signedTx => web3.eth.sendSignedTransaction(signedTx.rawTransaction)).then(console.log);





